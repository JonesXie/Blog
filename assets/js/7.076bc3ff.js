(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{356:function(t,a,s){t.exports=s.p+"assets/img/git.686511a2.png"},376:function(t,a,s){"use strict";s.r(a);var e=s(25),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git-常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令"}},[t._v("#")]),t._v(" Git 常用命令")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[e("strong",[t._v("Git 原理详解及实用指南："),e("a",{attrs:{href:"https://juejin.im/book/5a124b29f265da431d3c472e",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/book/5a124b29f265da431d3c472e"),e("OutboundLink")],1)]),e("br"),t._v(" "),e("strong",[t._v("Git 问题和操作清单汇总："),e("a",{attrs:{href:"https://juejin.im/post/5d5d61e96fb9a06ace5254bd#heading-22",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/post/5d5d61e96fb9a06ace5254bd#heading-22"),e("OutboundLink")],1)])])]),t._v(" "),e("p",[e("img",{attrs:{src:s(356),alt:"git",title:"git命令总结"}})]),t._v(" "),e("h2",{attrs:{id:"下载-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载-安装"}},[t._v("#")]),t._v(" 下载&安装")]),t._v(" "),e("blockquote",[e("p",[t._v("git 官网: "),e("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("从官网中下载对应版本，并安装。安装时可以完全使用默认设置即可！"),e("br"),t._v("\n随便某个文件下右键如果有 "),e("code",[t._v("Git Bash Here")]),t._v(" 就安装成功！")]),t._v(" "),e("h2",{attrs:{id:"全局设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局设置"}},[t._v("#")]),t._v(" 全局设置")]),t._v(" "),e("p",[t._v("随便某个文件下右键选择 "),e("code",[t._v("Git Bash Here")]),t._v(" 唤起 git 命令行工具")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config --list // 全局信息\ngit config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v(" // 全局用户名\ngit config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),t._v(" // 全局邮箱\n\n// 查看全局\ngit config user.name\ngit config user.email\n")])])]),e("h2",{attrs:{id:"git-工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-工作流程"}},[t._v("#")]),t._v(" Git 工作流程")]),t._v(" "),e("h3",{attrs:{id:"初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),e("blockquote",[e("p",[t._v("在文件夹中初始化 git，将会生成"),e("code",[t._v(".git")]),t._v("隐藏文件夹，内放置 git 相关信息 "),e("strong",[t._v("勿删")])])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git init\n")])])]),e("h3",{attrs:{id:"暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#暂存区"}},[t._v("#")]),t._v(" 暂存区")]),t._v(" "),e("blockquote",[e("p",[t._v("写完代码后，将修改的代码放入暂存区")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 将所有的修改都添加到暂存区 . 是 all 的简写\ngit add .\n\n// 或者单独文件\ngit add a.html\n")])])]),e("h3",{attrs:{id:"版本库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本库"}},[t._v("#")]),t._v(" 版本库")]),t._v(" "),e("blockquote",[e("p",[t._v("暂存区的文件，通过 commit 提交到版本库中")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"本次提交的信息"')]),t._v("\n")])])]),e("h3",{attrs:{id:"远端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远端"}},[t._v("#")]),t._v(" 远端")]),t._v(" "),e("blockquote",[e("p",[t._v("如果多人协作/备份代码，可以设置远程仓库")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 添加远程\ngit remote add origin https://github.com/xxxx/xxx.git  //设置远程仓库(origin)\n\n// 推送代码\ngit push -u origin master\n// -u 是设置后期使用 push将默认推送到 origin 远端,可以不设置\n\n// 拉取代码\ngit pull origin master  // 或者 git pull 将默认从 origin/master中拉取\n")])])]),e("h2",{attrs:{id:"分支操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[t._v("#")]),t._v(" 分支操作")]),t._v(" "),e("h3",{attrs:{id:"查看分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看分支"}},[t._v("#")]),t._v(" 查看分支")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch  // 查看所有分支\n")])])]),e("h3",{attrs:{id:"创建分支-切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建分支-切换分支"}},[t._v("#")]),t._v(" 创建分支&切换分支")]),t._v(" "),e("blockquote",[e("p",[t._v("创建分支和切换分支可以通过一行命令，所以分在一起")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 创建分支\ngit branch new_branch\n\n// 切换分支\ngit checkout new_branch\n\n// 创建分支并切换到此放分支\ngit checkout -b new_branch\n")])])]),e("h3",{attrs:{id:"同步远端分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步远端分支"}},[t._v("#")]),t._v(" 同步远端分支")]),t._v(" "),e("blockquote",[e("p",[t._v("1、远程先开好分支然后拉到本地"),e("br"),t._v("\n2、本地先开好分支然后推送到远程")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 1、远程先开好分支然后拉到本地\ngit checkout -b new_branch origin/new_branch  // origin远端中的new_branch分支\n\n// 2、本地先开好分支然后推送到远程\ngit checkout -b new_branch  // 本地创建分支并切换到此分支\ngit push origin new_branch:new_branch\n// 推送本地的new_branch(冒号前面的)分支到远程origin的new_branch(冒号后面的)分支(没有会自动创建)\n")])])]),e("h3",{attrs:{id:"合并分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),e("blockquote",[e("p",[t._v("通常是将分支合并到 master 主分支中，当然也可以一个分支合并另一个分支")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 此案例以master为主分支\n\n// 1、切换到需要合并到的分支上\ngit checkout master\n\n// 2、合并分支\ngit merge new_branch  // new_branch是你所要合并的分支名字\n\n// 3、解决冲突\ngit将会自动处理不同的代码，但是出现冲突需要自己手动解决\n")])])]),e("h3",{attrs:{id:"删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 已经合并的分支\ngit branch -d new_branch\n\n// 如果没有合并的分支，上述命令行将会产生提示\n// 但是分支没用了，可以强制删除 -D\ngit branch -D new_branch\n\n// 删除远程分支\ngit push origin -d new_branch\n")])])]),e("h2",{attrs:{id:"标签管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签管理"}},[t._v("#")]),t._v(" 标签管理")]),t._v(" "),e("p",[t._v("标签（tag）和 branch 很像，但是标签是不会移动的，而 branch 会根据修改进行移动的")]),t._v(" "),e("h3",{attrs:{id:"查看-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-tag"}},[t._v("#")]),t._v(" 查看 tag")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git tag\n")])])]),e("h3",{attrs:{id:"新建-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新建-tag"}},[t._v("#")]),t._v(" 新建 tag")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 本地创建\ngit tag v1.0 // v1.0为tag名\n\n// 推送到远程\ngit push origin v1.0 // 推送到origin远程v1.0的tag\n\n// 一次推送所有的tags\ngit push origin --tags\n")])])]),e("h3",{attrs:{id:"删除-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除-tag"}},[t._v("#")]),t._v(" 删除 tag")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 先删除本地tag\ngit tag -d <tag名>\n\n// 删除远程tag\ngit push origin --d tag <tag名>\n")])])]),e("h2",{attrs:{id:"常用错误处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用错误处理"}},[t._v("#")]),t._v(" 常用错误处理")]),t._v(" "),e("h3",{attrs:{id:"修正-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修正-commit"}},[t._v("#")]),t._v(" 修正 commit")]),t._v(" "),e("h4",{attrs:{id:"修正上一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修正上一个-commit"}},[t._v("#")]),t._v(" 修正上一个 commit")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("amend")]),t._v(":'修正'，当 commit 添加上"),e("code",[t._v("--amend")]),t._v(",用这个新的 commit 把当前 commit 替换掉")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git commit --amend\n")])])]),e("h4",{attrs:{id:"修正不是上一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修正不是上一个-commit"}},[t._v("#")]),t._v(" 修正不是上一个 commit")]),t._v(" "),e("blockquote",[e("p",[t._v("rebase -i 是 rebase --interactive 的缩写形式，意为「交互式 rebase」"),e("br"),t._v(" "),e("a",{attrs:{href:"https://juejin.im/book/5a124b29f265da431d3c472e/section/5a1451dd5188253293142cd7",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细介绍"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 回退到倒数第二个\ngit rebase -i HEAD^^\n")])])]),e("h3",{attrs:{id:"丢弃-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#丢弃-commit"}},[t._v("#")]),t._v(" 丢弃 commit")]),t._v(" "),e("h4",{attrs:{id:"丢弃上一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#丢弃上一个-commit"}},[t._v("#")]),t._v(" 丢弃上一个 commit")]),t._v(" "),e("blockquote",[e("p",[t._v("1、reset --hard :丢弃上一个 commit"),e("br"),t._v("\n2、reset 参数解析")]),t._v(" "),e("blockquote",[e("p",[t._v("a、reset --hard：重置工作目录，工作目录里的内容会被完全重置为和 "),e("code",[t._v("HEAD")]),t._v(" 的新位置相同的内容"),e("br"),t._v("\nb、reset --soft：保留工作目录，保留工作目录和暂存区中的内容，并把重置 "),e("code",[t._v("HEAD")]),t._v(" 所带来的新的差异放进暂存区"),e("br"),t._v("\nc、reset 不加参数：保留工作目录，并清空暂存区")])])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 丢弃上一个commit\ngit reset --hard HEAD^\n")])])]),e("h4",{attrs:{id:"丢弃不是上一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#丢弃不是上一个-commit"}},[t._v("#")]),t._v(" 丢弃不是上一个 commit")]),t._v(" "),e("blockquote",[e("p",[t._v("同样是使用 rebase: "),e("strong",[t._v("git rebase -i HEAD^^")])])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 回退到倒数第二个\ngit rebase -i HEAD^^\n")])])]),e("h3",{attrs:{id:"修改-push-后的代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改-push-后的代码"}},[t._v("#")]),t._v(" 修改 push 后的代码")]),t._v(" "),e("h4",{attrs:{id:"自己的分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自己的分支"}},[t._v("#")]),t._v(" 自己的分支")]),t._v(" "),e("blockquote",[e("p",[t._v("对于自己能完全掌控的仓库，可以使用上面的方法,再强制推送")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// -f 表示强制推送\ngit push origin branch1 -f\n")])])]),e("h4",{attrs:{id:"协作的分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协作的分支"}},[t._v("#")]),t._v(" 协作的分支")]),t._v(" "),e("blockquote",[e("p",[t._v("下面代码就会增加一条新的 commit，它的内容和倒数第二个 commit 是相反的，从而和倒数第二个 commit 相互抵消，达到撤销的效")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git revert HEAD^\n")])])]),e("h2",{attrs:{id:"常用-git-命令总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用-git-命令总结"}},[t._v("#")]),t._v(" 常用 Git 命令总结")]),t._v(" "),e("ul",[e("li",[e("code",[t._v('git config --global user.name "name"')]),t._v("  设置全局名字")]),t._v(" "),e("li",[e("code",[t._v('git config --global user.email "you@email.com"')]),t._v(" 设置全局邮箱")]),t._v(" "),e("li",[e("code",[t._v("git init")]),t._v(" 初始化仓库")]),t._v(" "),e("li",[e("code",[t._v("git add .")]),t._v(" 把工作区的文件全部提交到暂存区")]),t._v(" "),e("li",[e("code",[t._v('git commit -m "xxx"')]),t._v(" 把暂存区的所有文件提交到仓库区")]),t._v(" "),e("li",[e("code",[t._v("git remote add origin https://github.com/xxx/xxx.git")]),t._v(" 把本地仓库与远程仓库连接起来")]),t._v(" "),e("li",[e("code",[t._v("git push -u origin master")]),t._v(" 把仓库区的主分支 master 提交到远程仓库里")]),t._v(" "),e("li",[e("code",[t._v("git push -u origin <分支>")]),t._v(" 把其他分支提交到远程仓库")]),t._v(" "),e("li",[e("code",[t._v("git status")]),t._v(" 查看当前仓库的状态")]),t._v(" "),e("li",[e("code",[t._v("git diff")]),t._v("  查看文件修改的具体内容")]),t._v(" "),e("li",[e("code",[t._v("git log")]),t._v("  显示从最近到最远的提交历史")]),t._v(" "),e("li",[e("code",[t._v("git clone https://github.com/xxx/xxx.git dirName")]),t._v(" 克隆仓库到本地 dirName 文件中")]),t._v(" "),e("li",[e("code",[t._v("git commit --amend")]),t._v(" 将此次修改提交到上次 commit 中")]),t._v(" "),e("li",[e("code",[t._v("git reset --hard 版本号")]),t._v(" 回溯版本，版本号在 commit 的时候与 master 跟随在一起")]),t._v(" "),e("li",[e("code",[t._v("git reflog")]),t._v(" 显示命令历史")]),t._v(" "),e("li",[e("code",[t._v("git checkout --")]),t._v("   撤销命令，用版本库里的文件替换掉工作区的文件。")]),t._v(" "),e("li",[e("code",[t._v("git branch")]),t._v(" 查看当前所有分支")]),t._v(" "),e("li",[e("code",[t._v("git branch <分支名字>")]),t._v(" 创建分支")]),t._v(" "),e("li",[e("code",[t._v("git checkout <分支名字>")]),t._v(" 切换到分支")]),t._v(" "),e("li",[e("code",[t._v("git merge <分支名字>")]),t._v(" 合并分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -d <分支名字>")]),t._v(" 删除分支,有可能会删除失败，因为 Git 会保护没有被合并的分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -D <分支名字>")]),t._v(" 强行删除，丢弃没被合并的分支")]),t._v(" "),e("li",[e("code",[t._v("git log --graph")]),t._v(" 查看分支合并图")]),t._v(" "),e("li",[e("code",[t._v("git merge --no-ff <分支名字>")]),t._v(" 合并分支的时候禁用 Fast forward (会丢失分支历史信息)")]),t._v(" "),e("li",[e("code",[t._v("git stash")]),t._v(" 当有其他任务插进来时，把当前工作现场“存储”起来,以后恢复后继续工作")]),t._v(" "),e("li",[e("code",[t._v("git stash list")]),t._v(" 查看你刚刚“存放”起来的工作去哪里了")]),t._v(" "),e("li",[e("code",[t._v("git stash apply")]),t._v(" 恢复却不删除 stash 内容")]),t._v(" "),e("li",[e("code",[t._v("git stash drop")]),t._v(" 删除 stash 内容")]),t._v(" "),e("li",[e("code",[t._v("git stash pop")]),t._v(" 恢复的同时把 stash 内容也删了")]),t._v(" "),e("li",[e("code",[t._v("git remote")]),t._v(" 查看远程库的信息，会显示 origin，远程仓库默认名称为 origin")]),t._v(" "),e("li",[e("code",[t._v("git remote -v")]),t._v(" 显示更详细的信息")]),t._v(" "),e("li",[e("code",[t._v("git pull")]),t._v(" 把最新的提交从远程仓库中抓取下来，在本地合并,和 git push 相反")]),t._v(" "),e("li",[e("code",[t._v("git rebase")]),t._v(" 把分叉的提交历史“整理”成一条直线，看上去更直观")]),t._v(" "),e("li",[e("code",[t._v("git tag")]),t._v(" 查看所有标签，可以知道历史版本的 tag")]),t._v(" "),e("li",[e("code",[t._v("git tag")]),t._v("   打标签，默认为 HEAD。比如 git tag v1.0")]),t._v(" "),e("li",[e("code",[t._v("git tag")]),t._v("  <版本号> 把版本号打上标签，版本号就是 commit 时，跟在旁边的一串字母数字")]),t._v(" "),e("li",[e("code",[t._v("git show")]),t._v("   查看标签信息")]),t._v(" "),e("li",[e("code",[t._v('git tag -a -m "<说明>"')]),t._v(" 创建带说明的标签。 -a 指定标签名，-m 指定说明文字")]),t._v(" "),e("li",[e("code",[t._v("git tag -d")]),t._v("   删除标签")]),t._v(" "),e("li",[e("code",[t._v("git push origin")]),t._v("   推送某个标签到远程")]),t._v(" "),e("li",[e("code",[t._v("git push origin --tags")]),t._v(" 一次性推送全部尚未推送到远程的本地标签")]),t._v(" "),e("li",[e("code",[t._v("git push origin :refs/tags/")]),t._v(" 删除远程标签")]),t._v(" "),e("li",[e("code",[t._v("git add -f")]),t._v("   强制提交已忽略的的文件")])]),t._v(" "),e("h2",{attrs:{id:"git-特殊操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-特殊操作"}},[t._v("#")]),t._v(" Git 特殊操作")]),t._v(" "),e("h3",{attrs:{id:"偏移符号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#偏移符号"}},[t._v("#")]),t._v(" 偏移符号")]),t._v(" "),e("blockquote",[e("p",[t._v("1、"),e("code",[t._v("^")]),t._v("：在 commit 的后面加一个或多个 ^ 号，可以把 commit 往回偏移，偏移的数量是 ^ 的数量"),e("br"),t._v("\n2、"),e("code",[t._v("~")]),t._v("：在 commit 的后面加上 ~ 号和一个数，可以把 commit 往回偏移，偏移的数量是 ~ 号后面的数")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("master^ 表示 master 指向的 commit 之前的那个 commit； HEAD^^ 表示 HEAD 所指向的 commit 往前数两个 commit\n\nHEAD~5 表示 HEAD 指向的 commit 往前数 5 个 commit。\n")])])]),e("h3",{attrs:{id:"生成-ssh-密钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成-ssh-密钥"}},[t._v("#")]),t._v(" 生成 SSH 密钥")]),t._v(" "),e("blockquote",[e("p",[t._v("1、本地 SSH 密钥存在于"),e("strong",[t._v("C:\\Users\\Jonesxie.ssh")]),t._v("文件夹中"),e("br"),t._v("\n2、"),e("strong",[t._v("id_rsa")]),t._v("为私钥，"),e("strong",[t._v("id_rsa.pub")]),t._v("为公钥")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 需要先看看本地是否有ssh密钥，没有再创建\nssh-keygen\n\n// 或者\nssh-keygen -t rsa -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"anhuixieqijun@163.com"')]),t._v("\n")])])]),e("h3",{attrs:{id:"远程同步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程同步"}},[t._v("#")]),t._v(" 远程同步")]),t._v(" "),e("h4",{attrs:{id:"设置多远程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置多远程"}},[t._v("#")]),t._v(" 设置多远程")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// 添加远程\ngit remote add origin https://github.com/xxxx/xxx.git  //设置远程仓库(origin)\ngit remote add mirror https://gitee.com/xxxx/xxx.git  //设置远程仓库(mirror)\n\n// 拉取推送\ngit pull origin master\ngit pull mirror master\ngit push origin master\ngit push mirror master\n")])])]),e("h4",{attrs:{id:"一条命令同时更新多个远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一条命令同时更新多个远程仓库"}},[t._v("#")]),t._v(" 一条命令同时更新多个远程仓库")]),t._v(" "),e("blockquote",[e("p",[t._v("pull 时，只 pull 第一个设置的远端仓库"),e("br"),t._v("\npush 时，将先后 push 到多个远端")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote set-url --add origin https://gitee.com/xxxx/xxx.git\n\n//拉取推送\ngit push origin master\n")])])]),e("blockquote",[e("p",[e("strong",[t._v(".git/config 中的 origin 部分的内容")])])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("[remote "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),t._v("]\nurl = https://github.com/JonesXie/xxx.git\nurl = https://gitee.com/Jonesxie/xxx.git\nfetch = +refs/heads/*:refs/remotes/origin/*\n")])])]),e("h4",{attrs:{id:"免输入密码操作远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#免输入密码操作远程仓库"}},[t._v("#")]),t._v(" 免输入密码操作远程仓库")]),t._v(" "),e("blockquote",[e("p",[t._v("1、配置文件的 url 里配上用户名和密码即可"),e("strong",[t._v("免掉输入密码")]),e("br"),t._v("\n2、也可以使用"),e("strong",[t._v("SSH 密钥")])])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("url = https://${user}:${password}@github.com/JonesXie/xxx.git\n")])])]),e("h3",{attrs:{id:"gitignore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[t._v("#")]),t._v(" .gitignore")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(".DS_Store\nnode_modules\n/dist\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# local env files")]),t._v("\n.env.local\n.env.*.local\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Log files")]),t._v("\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Editor directories and files")]),t._v("\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);